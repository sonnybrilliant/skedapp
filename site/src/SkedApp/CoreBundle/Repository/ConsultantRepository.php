<?php

namespace SkedApp\CoreBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * consultantRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ConsultantRepository extends EntityRepository
{

    /**
     * Get all active consultants query
     * 
     * @author Ronald Conco <ronald.conco@kaizania.com>
     * @return Resultset
     */
    public function getAllActiveConsultantsQuery($options)
    {

        $defaultOptions = array(
            'sort' => 'c.id',
            'direction' => 'asc'
        );

        foreach ($options as $key => $values) {
            if (!$values)
                $options[$key] = $defaultOptions[$key];
        }

        $objQueuryBuilder = $this->createQueryBuilder('c')->select('c');
        $objQueuryBuilder->where('c.isDeleted =  :status')->setParameter('status', false);
        $objQueuryBuilder->orderBy($options['sort'], $options['direction']);
        return $objQueuryBuilder->getQuery()->execute();
    }

    /**
     * Get consultant by service
     * 
     * @param integer $serviceId
     * @return type
     */
    public function getByService($serviceId)
    {
        $qb = $this->createQueryBuilder('c')
            ->innerJoin('c.consultantServices', 's')
            ->where('s.id = :serviceId')
            ->setParameter('serviceId', $serviceId);

        return $qb->getQuery()->execute();
    }

    /**
     * Get all active consultants query
     * 
     * @author Ronald Conco <ronald.conco@kaizania.com>
     * @return Resultset
     */
    public function getAllActiveQuery()
    {
        $objQueuryBuilder = $this->createQueryBuilder('c')->select('c');
        $objQueuryBuilder->where('c.isDeleted =  :status')->setParameter('status', false);
        return $objQueuryBuilder->getQuery()->execute();
    }

}
