<?php

namespace SkedApp\CoreBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ServiceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ServiceRepository extends EntityRepository
{

    /**
     * Get all active services query
     * 
     * @author Ronald Conco <ronald.conco@kaizania.com>
     * @return Resultset
     */
    public function getAllActiveServiceQuery($options)
    {

        $defaultOptions = array(
            'searchText' => '',
            'sort' => 'c.id',
            'direction' => 'asc'
        );

        foreach ($options as $key => $values) {
            if (!$values){
                $options[$key] = $defaultOptions[$key];
            }    
        }

        $qb = $this->createQueryBuilder('s')->select('s');

                // search
        if ($options['searchText']) {
            if ($options['searchText'] != "search..") {
                $qb->andWhere($qb->expr()->orx(
                        $qb->expr()->like('s.name', $qb->expr()->literal('%' . $options['searchText'] . '%'))
                    ));
            }
        }
        
        $qb->orderBy($options['sort'], $options['direction']);
        return $qb->getQuery()->execute();
    }

    /**
     * Delete services by category
     * 
     * @author Ronald Conco <ronald.conco@kaizania.com>
     * @return Void
     */
    public function deleteServicesByCategory($category)
    {
        $objQueuryBuilder = $this->createQueryBuilder('s')->update('SkedAppCoreBundle:Service', 's');
        $objQueuryBuilder->set('s.isDeleted', true)
            ->where('s.category =  :category')
            ->setParameter('category', $category);
        return $objQueuryBuilder->getQuery()->execute();
    }

    /**
     * Delete services by category
     * 
     * @author Ronald Conco <ronald.conco@kaizania.com>
     * @return Resultset
     */
    public function getServicesByCategory($category)
    {
        $objQueuryBuilder = $this->createQueryBuilder('s')->select('s');
        $objQueuryBuilder->where('s.isDeleted = :status')
            ->andWhere('s.category =  :category')
            ->setParameters(array('category' => $category,'status'=>false));
        return $objQueuryBuilder->getQuery()->execute();
    }

}
